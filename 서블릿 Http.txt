서블릿 

요청과 응답(이벤트 방식 ) - 브라우저는 서버에 요청을보내고 서버는 요청의 내용을 읽고 처리한 뒤 브라우저로 응답을 보냄 
Http: 모든 웹 데이터 교환의 기초이며, 클라이언트-서버 간의 프로토콜 
 *프로토콜: 어떤 시스템이 다른 시스템과 통신을 원할하게 수용하도록 해주는 통신 규약, 약속(공용언어를 사용한다는 느낌 )

Http  헤더 (header)
-요청과 응답으로 부가적인 정보를 전송할 수 있도록 해줌 

일반헤더: 요청과 응답 모두에 적용되지만 바디에서 최종적으로 전송되는 데이터와는 관련이 없는 헤더.
요청헤더: 페치될(가져올) 리소스나 클라이언트 자체에 대한 자세한 정보를 포함하는 헤더 
응답헤더 : 위치 또는 서버 자체에 대한 정보(이름, 버전 등) 와 같이 응답에 대한 부가적인 정보를 갖는 헤더
엔티디헤더 : 컨텐츠 길이나 MIME 타입과 같이 엔티티 바디에 대한 자세한 정보를 포함하는 헤더.

★요청과 응답(각각의 헤더와 본문을 가지고 있음 )
  - 헤더는 요청과 응답의 정보 본문은 실제 데이터 담는 공간 

★HTTP 상태 코드
2XX : 성공을 알리는 상태코드 입니다. 대표적으로 200(성공), 201(작성됨)이 많이 사용됩니다.
3XX : 리다이렉션(다른 페이지로 이동)을 알리는 상태 코드 입니다. 어떤 주소를 입력했는데 다른 주소의 페이지로 넘어갈 때 이 코드가 사용됩니다. 대표적으로 301(영구이동), 302(임시 이동)가 있습니다. 304(수정되지 않음)는 요청의 응답으로 캐시를 사용했다는 뜻 입니다.
4XX : 요청 오류를 나타냅니다. 요청 자체에 오류가 있을 때 표시됩니다. 대표적으로 400(잘못된 요청), 401(권한없음), 403(금지됨), 404(찾을 수 없음)가 있습니다. 
5XX : 서버오류를 나타냅니다. 요청은 제대로 왔지만 서버에 오류가 생겼을 때 발생합니다. 이 오류가 뜨지 않게 주의해서 프로그래밍 해야 합니다. 500(내부 서버 오류), 501(불량 게이트웨이), 503(서비스를 사용할 수 없음)이 자주 사용됩니다.

 *캐시: 자주사용하는 데이터나 값을 미리 복사해 놓는 임시장소 (저장공간이 작음)- 반복적으로 동일결과를 보여줘야 하는경우 또는 접근 시간에 비해 원래 데이터  접근하는 시간이 오래걸리는 경우 주로 캐시 사용 

★HTTP 요청 메서드 - 브라우저가 서버에 데이터를 전송하여 응답을 요청할때 사용하는 방식!!
-GET★:서버자원을 가져오고자 할떄 사용/ 본문에 데이터x 
* GET 메서드 같은 경우네는 브라우저에서 캐싱(기억)할 수도 있으므로 같은 주소로 GET 요청을 할 때 서버에서 가져오는 것이 아니라 캐시에서 가져올 수도 있습니다.
-POST★:서버에 자원을 새로 등록하고자 할때 사용 하는 방법 / 요청의 본문에 새로 등록할 데이터를 넣어보냅니다 
-PUT: 서버자원을 요청하는 자원으로 치환하고자 할때 사용 
-PATCH : 일부수정 
-DELETE
-OPTIONS

★서블릿(Servlet): 자바를 기반으로 하는 웹 어플리케이션 프로그래밍 기술 
  서블릿 클래스 -> 서블릿 객체 -> 서블릿 
 -웹 서버는 멀티쓰레드 방식 -> 데이터 공유문제는 인스턴스 변수로 인한것인데, 변수 선언 사용 하지 말것!!

 HttpServlet 클래스 상속받아서 서블릿 클래스 작성
doGet()/ doPost() 요청메서드 방식에 따라 사용
response.getWriter() 출력코드 작성시 


★web.xml 파일에 서블릿(Servlet) 등록하기
-웹 애플리케이션 배치 설명서파일 /  WEB-INF 하위 디렉토리에 있는 web.xml 
- 서블릿과 웹 연결을 위한 필요한 정보들 (서블릿 매핑)

웹 브라우저로부터 데이터 입력 받기
-<form> 요소를 통해 입력된 데이터는 doGet, doPost 메서드의 첫 번째 매개변수인 HttpServletRequest 객체에서 getParameter 메서드를 호출해서 가져올 수 있음 
String str = request.getParameter("num1");
int num = Integer.parseInt(str);



